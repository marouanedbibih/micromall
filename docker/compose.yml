services:
  postgresql:
    container_name: micromall_pg_sql
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - pgsql-data:/data/postgres
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - micromall-net
    restart: unless-stopped

  # # MongoDB
  # mongodb:
  #   image: mongo
  #   container_name: micromall_mongo_db
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - ./data/mongo:/data
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=marouane
  #     - MONGO_INITDB_ROOT_PASSWORD=marouane
  #   networks:
  #     - micromall-net
  #   restart: unless-stopped

  # # Zookeeper
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   container_name: micromall_zookeeper
  #   environment:
  #     ZOOKEEPER_SERVER_ID: 1
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - "22181:2181"
  #   networks:
  #     - micromall-net

  # # Kafka
  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   container_name: micromall_kafka
  #   ports:
  #     - "9092:9092"
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
  #   networks:
  #     - micromall-net

  # # Mail Dev
  # mail-dev:
  #   container_name: micromall_mail
  #   image: maildev/maildev
  #   ports:
  #     - 1080:1080 # Web Interface
  #     - 1025:1025 # SMTP

  # Config Server
  config-server:
    build:
      context: ../
      dockerfile: docker/microservices/Dockerfile.config-server
    container_name: micromall_config_server
    ports:
      - 8888:8888
    networks:
      - micromall-net
    # restart: unless-stopped
    environment:
      SPRING_GIT_URI: https://github.com/marouanedbibih/micromall
      SPRING_PROFILES_ACTIVE: docker
  eureka:
    build:
      context: ../
      dockerfile: docker/microservices/Dockerfile.eureka
    container_name: micromall_eureka
    ports:
      - 8761:8761
    networks:
      - micromall-net
    # restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_INSTANCE_HOSTNAME: eureka
      CONFIGSERVER_HOST: config-server
      CONFIGSERVER_PORT: 8888

networks:
  micromall-net:
    driver: bridge
    name: micromall-net

volumes:
  pgsql-data:
    driver: local
    name: micromall-pgsql-data



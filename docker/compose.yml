services:
  postgresql:
    container_name: micromall_pg_sql
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - pgsql-data:/data/postgres
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - micromall-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 5s
      timeout: 5s
      retries: 5

  # MongoDB
  mongodb:
    image: mongo
    container_name: micromall_mongo_db
    ports:
      - 27017:27017
    volumes:
      - ./data/mongo:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=marouane
      - MONGO_INITDB_ROOT_PASSWORD=marouane
    networks:
      - micromall-net
    restart: unless-stopped

  config-server:
    build:
      context: ../
      dockerfile: docker/microservices/Dockerfile.config-server
    container_name: micromall_config_server
    ports:
      - 8888:8888
    networks:
      - micromall-net
    restart: unless-stopped
    environment:
      SPRING_GIT_URI: https://github.com/marouanedbibih/micromall
      SPRING_PROFILES_ACTIVE: docker

  eureka:
    build:
      context: ../
      dockerfile: docker/microservices/Dockerfile.eureka
    container_name: micromall_eureka
    ports:
      - 8761:8761
    networks:
      - micromall-net
    restart: unless-stopped
    depends_on:
      - config-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_INSTANCE_HOSTNAME: eureka
      CONFIGSERVER_HOST: config-server
      CONFIGSERVER_PORT: 8888
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  micromall-net:
    driver: bridge
    name: micromall-net

volumes:
  pgsql-data:
    driver: local
    name: micromall-pgsql-data


